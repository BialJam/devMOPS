{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/logic/GameLogic.js",
    "src/logic/GameTimer.js",
    "src/objects/DraggableItem.js",
    "src/objects/Generator.js",
    "src/objects/Level.js",
    "src/objects/Meta.js",
    "src/objects/MoveableObject.js",
    "src/objects/Toolbox.js",
    "src/objects/ToolsFactory.js",
    "src/states/GameIntro.js",
    "src/states/GameState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/* jshint esversion: 6 */\nimport GameState from 'states/GameState';\nimport Levels from 'objects/Level'\nimport GameIntro from 'states/GameIntro'\n\nclass Game extends Phaser.Game {\n\n  constructor() {\n    super(800, 600, Phaser.AUTO, 'content', null);\n    this.state.add('Intro', GameIntro, false);\n    this.state.add('GameState', GameState, false);\n    //this.startLevel(0, this.state);\n    this.state.start('Intro', true, true, {\n      onStart:()=>{\n        this.startLevel(0, this.state);\n      }\n    });\n  }\n\n  startLevel(currentLevel = 0, stateManager) {\n\n    const data = {};\n    const levels = Levels.getLevels();\n\n    data.level = levels[currentLevel];\n    data.onWin = ()=> {\n      currentLevel++;\n\n      if (currentLevel >= levels.length) {\n        window.alert('Gratuluje!');\n        return;\n      }\n\n      this.startLevel(currentLevel, stateManager);\n    };\n\n    data.onFail = ()=> {\n      this.startLevel(currentLevel, stateManager);\n    };\n\n    stateManager.start('GameState', true, true, data);\n  }\n\n}\n\nnew Game();\n",
    "/* jshint esversion: 6 */\n\nclass GameLogic {\n\n  constructor(win, fail) {\n    this._playNum = 0;\n    this._win = win;\n    this._fail = fail;\n  }\n\n  registerMeta(meta) {\n    const self = this;\n    meta.win= (meta, walker) => {\n      self._playNum--;\n      self.checkWinning();\n      walker.sprite.destroyElement();\n    };\n    meta.fail = (meta, walker) => {\n      self.fail();\n    };\n  }\n\n  registerWalker(walker) { \n    const self = this;\n    this._playNum++;\n    walker.meetWrongTeam = function () {\n      self.fail();\n    };\n  }\n\n  checkWinning() {\n    if (this._playNum === 0) {\n      if (this._win) { \n        this._win();\n      }\n    }\n  }\n\n  fail() {\n    if (this._fail) {\n      this._fail();\n    }\n  }\n\n}\n\nexport default GameLogic;\n",
    "/* jshint esversion: 6 */\n\nclass GameTimer {\n\n  constructor(phaserTimer, readySeconds, gameSeconds, tickCallback, timeoutCallback) {\n    this._phaserTimer = phaserTimer;\n    this._readySeconds = readySeconds;\n    this._gameSeconds = gameSeconds;\n    this._tickCallback = tickCallback;\n    this._timeoutCallback = timeoutCallback;\n  }\n\n  start() {\n    var secondsLeft = this._readySeconds;\n    this._state = 'ready';\n    let internalTickCallback = function () {\n      // put game logic here;\n      secondsLeft--;\n      if (secondsLeft === 0 && this._state === 'ready') {\n        this._state = 'game';\n        secondsLeft = this._gameSeconds;\n      } else if (secondsLeft === 0 && this._state === 'game') {\n        this.stop();\n        return this._timeoutCallback();\n      }\n      this._tickCallback(this._state, secondsLeft);\n    };\n    this._phaserTimer.loop(Phaser.Timer.SECOND, internalTickCallback, this);\n    this._phaserTimer.start();\n  }\n\n  stop() {\n    this._phaserTimer.removeAll();\n  }\n\n}\n\nexport default GameTimer;\n",
    "/* jshint esversion: 6 */\n\nlet lastClickedBody, mouseConstraint;\n\nclass DraggableItem extends Phaser.Sprite {\n  constructor(game, x, y, collisionGroup, collidesWith, initialRotation = 0) {\n    super(game, x, y, 'item_rotated');\n    this._collisionGroup = collisionGroup;\n    this.collidesWith = collidesWith;\n    this.draggable = true;\n    this.initialRotation = initialRotation;\n    this.angle = initialRotation;\n  }\n\n  enablePhysics() {\n    this.game.physics.p2.enable(this);\n\n    const body = this.body;\n    body.mass = 99999;\n    body.clearShapes();\n    body.loadPolygon('belka', 'belka');\n    body.setCollisionGroup(this._collisionGroup);\n    body.angle = this.initialRotation;\n    body.fixedRotation = true;\n\n    this.inputEnabled = true;\n    this.input.enableDrag();\n    body.collides(this.collidesWith);\n  }\n\n\n  static onDown(pointer, mouseBody, game) {\n    var bodies = game.physics.p2.hitTest(pointer.position);\n\n    // p2 uses different coordinate system, so convert the pointer position to p2's coordinate system\n    var physicsPos = [game.physics.p2.pxmi(pointer.position.x), game.physics.p2.pxmi(pointer.position.y)];\n    if (bodies.length) {\n      var clickedBody = bodies[0];\n\n      if (!clickedBody.parent.sprite.draggable) {\n        return;\n      }\n\n      lastClickedBody = clickedBody.parent;\n      lastClickedBody.mass = 1;\n\n      var localPointInBody = [0, 0];\n      // this function takes physicsPos and coverts it to the body's local coordinate system\n      clickedBody.toLocalFrame(localPointInBody, physicsPos);\n\n      // use a revoluteContraint to attach mouseBody to the clicked body\n      mouseConstraint = game.physics.p2.createLockConstraint(mouseBody, clickedBody);\n    }\n  }\n\n  static onUp(game) {\n    if (typeof lastClickedBody !== 'undefined') {\n\n      lastClickedBody.mass = 99999;\n      lastClickedBody.setZeroVelocity();\n      lastClickedBody.setZeroRotation();\n      game.physics.p2.removeConstraint(mouseConstraint);\n    }\n  }\n\n  static move(pointer, mouseBody, game) {\n    mouseBody.position[0] = game.physics.p2.pxmi(pointer.position.x);\n    mouseBody.position[1] = game.physics.p2.pxmi(pointer.position.y);\n  }\n}\n\nexport default DraggableItem;\n",
    "/* jshint esversion: 6 */\nimport MoveableObject from 'objects/MoveableObject';\n\nclass Generator {\n\n  constructor(game, x, y, ownCollisionGroup, collisionGroups, team, gameLogic, initialRotation, readyTime) {\n    this.x = x;\n    this.y = y;\n    this.collisionGroups = collisionGroups;\n    this.ownCollisionGroup = ownCollisionGroup;\n    this.game = game;\n    this.team = team;\n    this.gameLogic = gameLogic;\n    this.initialRotation = initialRotation;\n    this.readyTime = readyTime * 1000;\n  }\n\n\n  start() {\n    const team = this.team === 'red' ? 'start_red' : 'start_green';\n    const arrow = new Phaser.Sprite(this.game, this.x, this.y, team);\n\n    arrow.anchor.setTo(0.5, 0.5);\n    arrow.angle = this.initialRotation;\n    this.game.add.existing(arrow);\n\n    const timer = this.game.time.events.add( this.readyTime,\n        () => {\n          console.log('its time');\n          //arrow.destroy(true);\n          this.generatePersons();\n        }, this);\n    this.game.time.events.start();\n\n  }\n\n  generatePersons() {\n    let count = 0;\n    const total = 3;\n\n    const timer = this.game.time.create(false);\n\n    timer.loop(Phaser.Timer.SECOND, ()=>{\n      if (count < total) {\n        this.createPerson.call(this);\n        count++;\n      } else {\n        this.game.time.events.remove(timer);\n      }\n    }, this);\n\n    timer.start();\n  }\n\n  createPerson() {\n    const game = this.game;\n    const item = new MoveableObject(game, this.x , this.y , this.ownCollisionGroup, this.team, this.initialRotation);\n    this.gameLogic.registerWalker(item);\n    game.add.existing(item);\n    item.enablePhysics();\n    item.body.collides(this.collisionGroups);\n  }\n}\n\nexport default Generator;\n",
    "/**\n * Created by bartek on 22/05/16.\n */\n\n\nclass Levels {\n\n  static getLevels() {\n    return [\n      {\n        ready: 10,\n        timeout: 15,\n        teams: [\n          {\n            name: 'red',\n            count: 3,\n            posX: 50,\n            posY: 200,\n            rotation: 90,\n            metaX: 400,\n            metaY: 400\n          },\n\n          {\n            name: 'green',\n            count: 3,\n            posX: 700,\n            posY: 200,\n            rotation: 270,\n            metaX: 400,\n            metaY: 50\n          }]\n      },\n      {\n        ready: 10,\n        timeout: 15,\n        teams: [\n          {\n            name: 'red',\n            count: 3,\n            posX: 200,\n            posY: 400,\n            rotation: 0,\n            metaX: 50,\n            metaY: 100\n          },\n\n          {\n            name: 'green',\n            count: 3,\n            posX: 400,\n            posY: 400,\n            rotation: 0,\n            metaX: 750,\n            metaY: 100\n          }]\n      },\n      {\n        ready: 10,\n        timeout: 20,\n        teams: [\n          {\n            name: 'red',\n            count: 10,\n            posX: 300,\n            posY: 400,\n            rotation: 0,\n            metaX: 625,\n            metaY: 150\n          },\n\n          {\n            name: 'green',\n            count: 3,\n            posX: 600,\n            posY: 400,\n            rotation: 0,\n            metaX: 125,\n            metaY: 50\n          }]\n      },  {\n        ready: 10,\n        timeout: 20,\n        teams: [\n          {\n            name: 'red',\n            count: 10,\n            posX: 50,\n            posY: 400,\n            rotation: 0,\n            metaX: 625,\n            metaY: 250\n          },\n\n          {\n            name: 'green',\n            count: 3,\n            posX: 150,\n            posY: 400,\n            rotation: 0,\n            metaX: 150,\n            metaY: 250\n          }]\n      },{\n        ready: 10,\n        timeout: 20,\n        teams: [\n          {\n            name: 'red',\n            count: 10,\n            posX: 750,\n            posY: 360,\n            rotation: 270,\n            metaX: 750,\n            metaY: 100\n          },\n\n          {\n            name: 'green',\n            count: 3,\n            posX: 750,\n            posY: 260,\n            rotation: 270,\n            metaX: 300,\n            metaY: 50\n          }]\n      },\n      //bartek\n      {\n        ready: 20,\n        timeout: 25,\n        teams: [\n          {\n            name: 'red',\n            count: 10,\n            posX: 50,\n            posY: 400,\n            rotation: 0,\n            metaX: 625,\n            metaY: 50\n          },\n\n          {\n            name: 'green',\n            count: 3,\n            posX: 625,\n            posY: 400,\n            rotation: 0,\n            metaX: 150,\n            metaY: 50\n          }]\n      }\n    ];\n  }\n}\n\nexport default Levels;\n",
    "/* jshint esversion: 6 */\nconst { Sprite, Point } = Phaser;\n\nclass Meta extends Sprite {\n\n  constructor(game, x, y, collisionGroup, team, win, fail) {\n    super(game, x, y, 'meta_' + team);\n    this._collisionGroup = collisionGroup;\n    this._team = team;\n  }\n\n  enablePhysics() {\n    this.game.physics.p2.enable(this, false);\n    const body = this.body;\n    body.setCollisionGroup(this._collisionGroup);\n    body.collides(this._collisionGroup, this.objectApproached);\n    body.static = true;\n  }\n\n  update() {\n  }\n\n  objectApproached(body, nextBody) {\n    const team = body.sprite._team;\n    if (body && nextBody && nextBody.sprite && nextBody.sprite.isMyTeam) {\n      let secondSprite = nextBody.sprite;\n      if (secondSprite && secondSprite.isMyTeam && secondSprite.isMyTeam(team)) {\n        if (body.sprite.win && secondSprite.markTouched()) {\n          body.sprite.win(body, nextBody, team);\n        }\n      } else {\n        if (body.sprite.fail) {\n          body.sprite.fail(body, nextBody, team);\n        }\n      }\n    }\n  }\n  \n}\n\nexport default Meta;\n",
    "/* jshint esversion: 6 */\nconst { Sprite } = Phaser;\n\nclass MoveableObject extends Sprite {\n\n  constructor(game, x, y, collisionGroup, team, initialRotation = 0) {\n    super(game, x, y, 'moveableObject_'+ team);\n    this._collisionGroup = collisionGroup;\n    this._team = team;\n    this.touched = false;\n    this.initialRotation = initialRotation;\n  }\n\n  enablePhysics() {\n    this.game.physics.p2.enable(this);\n    const body = this.body;\n\n    body.setCircle(10);\n    body.setCollisionGroup(this._collisionGroup);\n    body.setZeroDamping();\n    body.fixedRotation = false;\n    this.angle = 0;\n    enableAnimation(this);\n\n    const speed = 100;\n    const initialRotation = this.initialRotation;\n    body.velocity.x = speed * Math.sin(this.toRadians(initialRotation));\n    body.velocity.y = - speed * Math.cos(this.toRadians(initialRotation));\n\n    this.scale.setTo(0.5);\n\n    body.collides(this._collisionGroup, this.objectApproached);\n  }\n\n  toRadians(angle) {\n    return angle * (Math.PI / 180);\n  }\n\n  update() {\n    const body = this.body;\n\n    if (this._remove) {\n      this.game.physics.p2.getConstraints().filter(e => {\n        return e.bodyA.parent === body || e.bodyB.parent === body;\n      }).forEach(e => {\n        this.game.physics.p2.removeConstraint(e);\n      });\n      this.game.physics.p2.removeBody(body);\n      this.destroy();\n    }\n\n    body.damping = 0;\n    body.angularDamping = 0;\n\n    var angle = Math.atan2(body.velocity.y, body.velocity.x);\n    body.angle = angle * 180 / Math.PI;\n    body.angle += 90;\n   }\n\n  destroyElement() {\n    this._remove = true;\n  }\n\n  isMyTeam(team) {\n    return this._team === team;\n  }\n\n  markTouched() {\n    if (this.touched) {\n      return false;\n    }\n    this.touched = true;\n    return true;\n  }\n\n  objectApproached(body, nextBody) {\n    const sprite = body.sprite;\n    const secondSprite = nextBody.sprite;\n    if (sprite.meetWrongTeam && secondSprite.isMyTeam && !secondSprite.isMyTeam(sprite._team)) {\n      sprite.meetWrongTeam();\n    }\n  }\n}\nfunction enableAnimation(obj) {\n  const animations = obj.animations;\n  animations.add('walk');\n  animations.play('walk', 10, true);\n}\n\nexport default MoveableObject;\n",
    "/* jshint esversion: 6 */\nconst { Sprite, Point } = Phaser;\n\nclass Toolbox extends Sprite {\n\n  constructor(game, x, y, collidesWith, collisionGroup) {\n    super(game, x, y, 'toolbox');\n    this._collisionGroup = collisionGroup;\n    this.collidesWith = collidesWith;\n  }\n\n    // const body = this.body;\n  enablePhysics() {\n    this.game.physics.p2.enable(this);\n    const body = this.body;\n    body.collides(this.collidesWith);\n    body.static = true;\n    body.setCollisionGroup(this._collisionGroup);\n    body.mass = 99999;\n  }\n\n  update() {\n\n  }\n}\n\nexport default Toolbox;\n",
    "import DraggableItem from './DraggableItem';\n\nlet game, collisionGroup, collidesWith, position, x;\n\nconst init = (_game, _collisionGroup, _collidesWith) => {\n  game = _game;\n  collisionGroup = _collisionGroup;\n  collidesWith = _collidesWith;\n  x = 80;\n};\n\nconst addTool = (toolName) => {\n  let toolToReturn;\n  switch(toolName) {\n    case 'belka0':\n      toolToReturn = new DraggableItem(game, x, 530, collisionGroup, collidesWith, 0);\n      break;\n    case 'belka45':\n      toolToReturn = new DraggableItem(game, x, 530, collisionGroup, collidesWith, 45);\n      break;\n    case 'belka90':\n      toolToReturn = new DraggableItem(game, x, 530, collisionGroup, collidesWith, 90);\n      break;\n    case 'belka135':\n      toolToReturn = new DraggableItem(game, x, 530, collisionGroup, collidesWith, 135);\n      break;\n    default:\n      toolToReturn = new DraggableItem(game, x, 530, collisionGroup, collidesWith, 0);\n  }\n\n  game.add.existing(toolToReturn);\n  toolToReturn.enablePhysics();\n  x += 140;\n\n  return toolToReturn;\n};\n\nconst factory = {\n  init,\n  addTool\n};\n\nexport default factory;\n",
    "\n\nclass GameIntro extends Phaser.State {\n\n  preload(){\n    this.game.load.image('splash', 'assets/splash.png');\n    this.game.load.image('start', 'assets/start.png');\n  }\n\n  init(params){\n    this.params = params;\n  }\n\n  create(){\n    const game = this.game;\n    const params = this.params;\n    const world = game.world;\n    const center = getCenter(world);\n\n    const splash = new Phaser.Sprite(game, center.x /2 - 200,\n        center.y /2 - 150, 'splash');\n    game.add.existing(splash);\n\n    const start = new Phaser.Sprite(game, 400, 450, 'start');\n    game.add.existing(start);\n\n    start.inputEnabled = true;\n    start.events.onInputDown.add(()=>{\n      params.onStart();\n    }, this);\n\n  }\n}\n\nfunction getCenter({centerX, centerY}) {\n  return {x: centerX, y: centerY};\n}\n\nexport default GameIntro;",
    "/* jshint esversion: 6 */\n\nimport DraggableItem from 'objects/DraggableItem';\nimport Meta from 'objects/Meta';\nimport GameLogic from 'logic/GameLogic';\nimport ToolsFactory from 'objects/ToolsFactory';\nimport GameTimer from 'logic/GameTimer';\n\nimport Generator from 'objects/Generator';\nimport Toolbox from 'objects/Toolbox';\n\n\nclass GameState extends Phaser.State {\n\n  preload() {\n    this.game.load.image('background', 'assets/background.png');\n    this.game.load.image('item_rotated', 'assets/belka.png');\n    this.game.load.image('toolbox', 'assets/toolbox.png');\n    this.game.load.image('moveableObject_red', 'assets/ludzik_red.png');\n    this.game.load.image('moveableObject_green', 'assets/ludzik_green.png');\n    this.game.load.image('start_green', 'assets/start_green.png');\n    this.game.load.image('start_red', 'assets/start_red.png');\n    this.game.load.image('asphalt', 'assets/asphalt.png');\n    this.game.load.image('restart', 'assets/restart.png');\n\n    this.game.load.physics('belka', 'assets/belka.json');\n    this.game.load.spritesheet('meta_red', 'assets/meta_red.png');\n    this.game.load.spritesheet('meta_green', 'assets/meta_green.png');\n\n  }\n\n  init(params) {\n    this.params = params;\n  }\n\n  create() {\n    var timeLeftText, self = this;\n    const game = this.game;\n    game.add.tileSprite(0, 0, 800, 600, 'asphalt');\n    // game.stage.backgroundColor = \"#3d424c\";\n\n    let params = this.params;\n    this.lockedDown = false;\n\n    const center = getCenter(game.world);\n    const centerTextStyle = {font: \"65px Monospaced\", fill: \"#aabbcc\", align: \"center\"};\n    const textStyle = {font: \"30px Monospaced\", fill: \"#aabbcc\", align: \"right\"};\n    const timer = new GameTimer(game.time.create(false), this.params.level.ready, this.params.level.timeout, function (state, secondsLeft) {\n      if (state === 'ready') {\n        timeLeftText.setText('READY: ' + secondsLeft);\n      } else {\n        self.lockDown();\n        timeLeftText.setText('HURRY: ' + secondsLeft);\n      }\n    }, function () {\n      game.add.text(getCenter(game.world).x - 150, getCenter(game.world).y - 40, \"Time is up!!!\", centerTextStyle);\n      game.physics.p2.paused = true;\n      this.success = 'timeout';\n      setTimeout(() => params.onFail(), 1000);\n    });\n    const logic = new GameLogic(function () {\n      game.add.text(getCenter(game.world).x - 150, getCenter(game.world).y - 40, \"You WIN!\", centerTextStyle);\n      game.physics.p2.paused = true;\n      this.success = 'win';\n      setTimeout(() => params.onWin(), 1000);\n      timer.stop();\n    }, function () {\n      game.add.text(getCenter(game.world).x - 190, getCenter(game.world).y - 40, \"You LOOSE!\", centerTextStyle);\n      game.physics.p2.paused = true;\n      this.success = 'loose';\n      setTimeout(() => params.onFail(), 1000);\n      timer.stop();\n    });\n    timer.start();\n    // Physics enabled\n    game.physics.p2 = null;\n    game.physics.startSystem(Phaser.Physics.P2JS);\n    game.physics.p2.setImpactEvents(true);\n    game.physics.p2.restitution = 1;\n    game.physics.p2.gravity.y = 0;\n    game.physics.p2.gravity.x = 0;\n\n    // text to counting time out!\n    timeLeftText = game.add.text(getCenter(game.world).x + 250, getCenter(game.world).y - 300, \"READY!\", textStyle);\n\n    var mainCollisionGroup = this.game.physics.p2.createCollisionGroup();\n    var secondCollisionGroup = this.game.physics.p2.createCollisionGroup();\n    var toolboxCollisionGroup = this.game.physics.p2.createCollisionGroup();\n    game.physics.p2.updateBoundsCollisionGroup(true);\n\n    game.physics.startSystem(Phaser.Physics.P2JS);\n\n\n    var toolbox = new Toolbox(this.game, 400, 530, mainCollisionGroup, toolboxCollisionGroup);\n    game.add.existing(toolbox);\n    toolbox.enablePhysics();\n\n    params.level.teams.forEach(team => {\n      const meta = new Meta(this.game, team.metaX, team.metaY, mainCollisionGroup, team.name);\n      game.add.existing(meta);\n      meta.enablePhysics();\n      logic.registerMeta(meta);\n\n      const generator = new Generator(game, team.posX, team.posY, mainCollisionGroup, [mainCollisionGroup, secondCollisionGroup,\n        toolboxCollisionGroup], team.name, logic, team.rotation, params.level.ready);\n      generator.start();\n    });\n\n    ToolsFactory.init(game, secondCollisionGroup, [mainCollisionGroup]);\n    ToolsFactory.addTool();\n    ToolsFactory.addTool();\n    //ToolsFactory.addTool('belka45');\n    ToolsFactory.addTool('belka90');\n    ToolsFactory.addTool('belka90');\n    //ToolsFactory.addTool('belka135');\n\n    this.mouseBody = new p2.Body();\n    game.physics.p2.world.addBody(this.mouseBody);\n\n    game.input.onDown.add(this.onDown, this);\n    game.input.onUp.add(this.onUp, this);\n    game.input.addMoveCallback(this.move, this);\n    game.physics.p2.paused = false;\n\n    this.setupRestart();\n  }\n\n  setupRestart(){\n    const game = this.game;\n    const params = this.params;\n\n    const restart = new Phaser.Sprite(game, 600, 550, 'restart');\n    game.add.existing(restart);\n\n    restart.inputEnabled = true;\n    restart.events.onInputDown.add(()=>{\n      params.onFail();\n      this.game.time.events.removeAll();\n      window.clear\n    }, this);\n\n  }\n\n  onDown(pointer) {\n    if (!this.lockedDown) {\n      DraggableItem.onDown(pointer, this.mouseBody, this.game);\n    }\n  }\n\n  onUp() {\n    DraggableItem.onUp(this.game);\n  }\n\n  move(pointer) {\n    DraggableItem.move(pointer, this.mouseBody, this.game);\n  }\n\n  createToolbox(collisionGroup) {\n    const center = getCenter(this.game.world);\n    return new DraggableItem(this.game, center.x + 100, center.y, collisionGroup, 90);\n  }\n\n  lockDown() {\n    this.lockedDown = true;\n  }\n\n}\n\nfunction getCenter({centerX, centerY}) {\n  return {x: centerX, y: centerY};\n}\n\nexport default GameState;\n"
  ]
}